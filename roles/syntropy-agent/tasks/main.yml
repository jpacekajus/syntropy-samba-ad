---
# - hosts: all
#   become: true
#   tasks:
   - name: Install aptitude using apt
     apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

   - name: Install required system packages
     apt: name={{ item }} state=latest update_cache=yes
     loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

   - name: Add Docker GPG apt Key
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present

   - name: Add Docker Repository
     apt_repository:
       repo: deb https://download.docker.com/linux/ubuntu focal stable
       state: present

   - name: Update apt and install docker-ce
     apt: update_cache=yes name=docker-ce state=latest

   - name: Install Docker Module for Python
     pip:
       name: docker

   - name: Create a network with custom IPAM config
     docker_network:
       name: syntropynet
       ipam_options:
         subnet: '{{subnet}}'

   - name: pull an image
     docker_image:
       name: syntropynet/agent:stable
       #force: yes

   - name: Stop and remove old container
     docker_container:
       name: syntropy-agent
       state: absent
       image: syntropy-agent

   - name: Create Syntropy agent container and connect to network
     docker_container:
       name: syntropy-agent
       restart_policy: unless-stopped
       image: syntropynet/agent:stable
       network_mode: "host"
       purge_networks: no
       env:
         SYNTROPY_API_KEY: '{{ api_key }}'
         SYNTROPY_NETWORK_API: docker
         SYNTROPY_PROVIDER: '{{ cloud_provider }}'
         SYNTROPY_TAGS: '{{ syntropy_tag }}'
         SYNTROPY_AGENT_NAME: '{{ syntropy_tag }}'
       volumes:
       - /var/run/docker.sock:/var/run/docker.sock:ro
       devices:
       - "/dev/net/tun:/dev/net/tun"
       capabilities:
       - net_admin
       - sys_module
